{"name":"Afterparty","tagline":"A Rails 4 compatible queue with support for executing jobs in the future and persistence with Redis.","body":"[![Build Status](https://travis-ci.org/hstove/afterparty.png?branch=master)](https://travis-ci.org/hstove/afterparty)\r\n\r\n## Installation\r\n\r\nMake sure you've installed [redis](http://redis.io) on your machine.\r\n\r\nAdd this line to your application's Gemfile:\r\n\r\n~~~Ruby\r\ngem 'afterparty'\r\n~~~\r\n\r\nAnd then execute:\r\n\r\n    $ bundle\r\n\r\nOr install it yourself as:\r\n\r\n    $ gem install afterparty\r\n\r\nIn your desired application environment, like `application.rb`:\r\n\r\n~~~Ruby\r\nconfig.queue = Afterparty::RedisQueue.new\r\n~~~\r\n\r\n## Usage\r\n\r\nA `job` is a ruby object with a `run` method.\r\n\r\n~~~Ruby\r\nclass Job\r\n  def run\r\n    puts \"Hello!\"\r\n  end\r\nend\r\n~~~\r\n\r\nThen add it to the queue at any time.\r\n\r\n~~~Ruby\r\nRails.configuration.queue << Job.new\r\n~~~\r\n\r\nIf your job responds to an `execute_at` method, the queue will wait to process that job until the specified time.\r\n\r\n## Contributing\r\n\r\n1. Fork it\r\n2. Create your feature branch (`git checkout -b my-new-feature`)\r\n3. Add a test in `spec/redis_queue_spec.rb`\r\n4. Make sure tests pass when you run `rake`\r\n3. Commit your changes (`git commit -am 'Add some feature'`)\r\n4. Push to the branch (`git push origin my-new-feature`)\r\n5. Create new Pull Request\r\n","google":"UA-40884880-1","note":"Don't delete this file! It's used internally to help with page regeneration."}